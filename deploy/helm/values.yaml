
replicaCount: 1

image:
  repository: abbas9006/webface
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8080

env:
  
# UPSTREAM is http:// or https:// + name of k8s service with port
 - name: UPSTREAM
   value: "http://upstream:8080"

# LDAP_SERVER is Address of microsft active directory domain controler or its dns name
 - name: LDAP_SERVER
   value: "ldap-server-ip"

# Ldap_Port is port of ldap server by default is 389 or for ldaps server is 636
 - name: LDAP_PORT
   value: "389"

# LDAP_SEC_LEVEL is security setting for connectiong to ldap
# 0 is SecurityNone
# 1 is SecurityTLS
# 2 is SecurityStartTLS
# 3 is SecurityInsecureTLS
# 4 is SecurityInsecureStartTLS
 - name: LDAP_SEC_LEVEL
   value: "4"

# LDAP_BASEDN is ldap basedn, test.local domain is "DC=test,DC=local" and so on..
 - name: LDAP_BASEDN
   value: "DC=test,DC=local"

# the name of group in ldap server that allows to view content of secure app
# if the value set to "" mean all groups/users
 - name: LDAP_GROUP
   value: "GroupName"

# Auth_MODE id setting for athentication mode it can be
# "basic_auth" or "", empty mean web form
 - name: AUTH_MODE
   value: ""
  
# SET_USERNAME_HEADER is setting for pass user-name to UPSTREAM using "X_username" header.
 - name: SET_USERNAME_HEADER
   value: "false"

# InsecureSkipTLSVerify is for skiping UPSTREAM tls validation check, default value is off.
 - name: InsecureSkipTLSVerify
   value: "false"

# UPSTREAM_Bearer_TOKEN is token that sends for every connection to upstream,Its usefulee for some situation that UPSTREAM needs
# some Bearer token to accept connections.
 - name: UPSTREAM_Bearer_TOKEN
   value: ""

# K8S_DASHBOARD_MODE if sets to true it maps users to serviceacoount name in k8s (if exist)
#ldap username must be same as k8s service account name.
 - name: K8S_DASHBOARD_MODE
   value: "false"

# K8S_SERVICE_ACCOUNT_NAME_SPACE is the name namespace that must be searched for serviceaccounts
# example: if your ldap username is abbas and sa namespace is "kubernetes-dashboard" then run:
# kubectl create sa abbas -n kubernetes-dashboard
# and set K8S_SERVICE_ACCOUNT_NAME_SPACE kubernetes-dashboard
 - name: K8S_SERVICE_ACCOUNT_NAME_SPACE
   value: "kubernetes-dashboard"


ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
 
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}
